// Code generated by elegen. DO NOT EDIT.
// Source: go.aporeto.io/elemental (templates/model.gotpl)

package gaia

import (
	"fmt"

	"github.com/globalsign/mgo/bson"
	"github.com/mitchellh/copystructure"
	"go.aporeto.io/elemental"
)

// CloudLoadBalancerDataTargetGroup represents the model of a cloudloadbalancerdatatargetgroup
type CloudLoadBalancerDataTargetGroup struct {
	// Defines if Direct Server Return is enabled for the group.
	DirectServerReturnEnabled bool `json:"DirectServerReturnEnabled" msgpack:"DirectServerReturnEnabled" bson:"directserverreturnenabled" mapstructure:"DirectServerReturnEnabled,omitempty"`

	// The list of IDs of the target.
	TargetIDs []string `json:"TargetIDs" msgpack:"TargetIDs" bson:"targetids" mapstructure:"TargetIDs,omitempty"`

	ModelVersion int `json:"-" msgpack:"-" bson:"_modelversion"`
}

// NewCloudLoadBalancerDataTargetGroup returns a new *CloudLoadBalancerDataTargetGroup
func NewCloudLoadBalancerDataTargetGroup() *CloudLoadBalancerDataTargetGroup {

	return &CloudLoadBalancerDataTargetGroup{
		ModelVersion: 1,
		TargetIDs:    []string{},
	}
}

// GetBSON implements the bson marshaling interface.
// This is used to transparently convert ID to MongoDBID as ObectID.
func (o *CloudLoadBalancerDataTargetGroup) GetBSON() (interface{}, error) {

	if o == nil {
		return nil, nil
	}

	s := &mongoAttributesCloudLoadBalancerDataTargetGroup{}

	s.DirectServerReturnEnabled = o.DirectServerReturnEnabled
	s.TargetIDs = o.TargetIDs

	return s, nil
}

// SetBSON implements the bson marshaling interface.
// This is used to transparently convert ID to MongoDBID as ObectID.
func (o *CloudLoadBalancerDataTargetGroup) SetBSON(raw bson.Raw) error {

	if o == nil {
		return nil
	}

	s := &mongoAttributesCloudLoadBalancerDataTargetGroup{}
	if err := raw.Unmarshal(s); err != nil {
		return err
	}

	o.DirectServerReturnEnabled = s.DirectServerReturnEnabled
	o.TargetIDs = s.TargetIDs

	return nil
}

// BleveType implements the bleve.Classifier Interface.
func (o *CloudLoadBalancerDataTargetGroup) BleveType() string {

	return "cloudloadbalancerdatatargetgroup"
}

// DeepCopy returns a deep copy if the CloudLoadBalancerDataTargetGroup.
func (o *CloudLoadBalancerDataTargetGroup) DeepCopy() *CloudLoadBalancerDataTargetGroup {

	if o == nil {
		return nil
	}

	out := &CloudLoadBalancerDataTargetGroup{}
	o.DeepCopyInto(out)

	return out
}

// DeepCopyInto copies the receiver into the given *CloudLoadBalancerDataTargetGroup.
func (o *CloudLoadBalancerDataTargetGroup) DeepCopyInto(out *CloudLoadBalancerDataTargetGroup) {

	target, err := copystructure.Copy(o)
	if err != nil {
		panic(fmt.Sprintf("Unable to deepcopy CloudLoadBalancerDataTargetGroup: %s", err))
	}

	*out = *target.(*CloudLoadBalancerDataTargetGroup)
}

// Validate valides the current information stored into the structure.
func (o *CloudLoadBalancerDataTargetGroup) Validate() error {

	errors := elemental.Errors{}
	requiredErrors := elemental.Errors{}

	if len(requiredErrors) > 0 {
		return requiredErrors
	}

	if len(errors) > 0 {
		return errors
	}

	return nil
}

// SpecificationForAttribute returns the AttributeSpecification for the given attribute name key.
func (*CloudLoadBalancerDataTargetGroup) SpecificationForAttribute(name string) elemental.AttributeSpecification {

	if v, ok := CloudLoadBalancerDataTargetGroupAttributesMap[name]; ok {
		return v
	}

	// We could not find it, so let's check on the lower case indexed spec map
	return CloudLoadBalancerDataTargetGroupLowerCaseAttributesMap[name]
}

// AttributeSpecifications returns the full attribute specifications map.
func (*CloudLoadBalancerDataTargetGroup) AttributeSpecifications() map[string]elemental.AttributeSpecification {

	return CloudLoadBalancerDataTargetGroupAttributesMap
}

// ValueForAttribute returns the value for the given attribute.
// This is a very advanced function that you should not need but in some
// very specific use cases.
func (o *CloudLoadBalancerDataTargetGroup) ValueForAttribute(name string) interface{} {

	switch name {
	case "DirectServerReturnEnabled":
		return o.DirectServerReturnEnabled
	case "TargetIDs":
		return o.TargetIDs
	}

	return nil
}

// CloudLoadBalancerDataTargetGroupAttributesMap represents the map of attribute for CloudLoadBalancerDataTargetGroup.
var CloudLoadBalancerDataTargetGroupAttributesMap = map[string]elemental.AttributeSpecification{
	"DirectServerReturnEnabled": {
		AllowedChoices: []string{},
		BSONFieldName:  "directserverreturnenabled",
		ConvertedName:  "DirectServerReturnEnabled",
		Description:    `Defines if Direct Server Return is enabled for the group.`,
		Exposed:        true,
		Name:           "DirectServerReturnEnabled",
		Stored:         true,
		Type:           "boolean",
	},
	"TargetIDs": {
		AllowedChoices: []string{},
		BSONFieldName:  "targetids",
		ConvertedName:  "TargetIDs",
		Description:    `The list of IDs of the target.`,
		Exposed:        true,
		Name:           "TargetIDs",
		Stored:         true,
		SubType:        "string",
		Type:           "list",
	},
}

// CloudLoadBalancerDataTargetGroupLowerCaseAttributesMap represents the map of attribute for CloudLoadBalancerDataTargetGroup.
var CloudLoadBalancerDataTargetGroupLowerCaseAttributesMap = map[string]elemental.AttributeSpecification{
	"directserverreturnenabled": {
		AllowedChoices: []string{},
		BSONFieldName:  "directserverreturnenabled",
		ConvertedName:  "DirectServerReturnEnabled",
		Description:    `Defines if Direct Server Return is enabled for the group.`,
		Exposed:        true,
		Name:           "DirectServerReturnEnabled",
		Stored:         true,
		Type:           "boolean",
	},
	"targetids": {
		AllowedChoices: []string{},
		BSONFieldName:  "targetids",
		ConvertedName:  "TargetIDs",
		Description:    `The list of IDs of the target.`,
		Exposed:        true,
		Name:           "TargetIDs",
		Stored:         true,
		SubType:        "string",
		Type:           "list",
	},
}

type mongoAttributesCloudLoadBalancerDataTargetGroup struct {
	DirectServerReturnEnabled bool     `bson:"directserverreturnenabled"`
	TargetIDs                 []string `bson:"targetids"`
}
