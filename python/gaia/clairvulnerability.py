# -*- coding: utf-8 -*-

from pyelemental import RESTObject
from pyelemental import validate_string_in_list, validate_float_in_list, validate_int_in_list, validate_required_int, validate_required_float, validate_required_string, validate_required_time, validate_maximum_float, validate_minimum_float, validate_maximum_int, validate_minimum_int, validate_maximum_length, validate_minimum_length, validate_pattern


class ClairVulnerability(RESTObject):
    """ Represents a ClairVulnerability in the 

        Notes:
            None
    """

    def __init__(self, **kwargs):
        """ Initializes a ClairVulnerability instance

          Notes:
              You can specify all parameters while calling this methods.
              A special argument named `data` will enable you to load the
              object from a Python dictionary

          Examples:
              >>> clairvulnerability = ClairVulnerability(id=u'xxxx-xxx-xxx-xxx', name=u'ClairVulnerability')
              >>> clairvulnerability = ClairVulnerability(data=my_dict)
        """

        super(ClairVulnerability, self).__init__()

        # Read/Write Attributes
        
        self._description = None
        self._fixedin = None
        self._link = None
        self._name = None
        self._namespacename = None
        self._severity = None
        
        self.expose_attribute(local_name="description", remote_name="description")
        self.expose_attribute(local_name="fixedIn", remote_name="fixedIn")
        self.expose_attribute(local_name="link", remote_name="link")
        self.expose_attribute(local_name="name", remote_name="name")
        self.expose_attribute(local_name="namespaceName", remote_name="namespaceName")
        self.expose_attribute(local_name="severity", remote_name="severity")

        self._compute_args(**kwargs)

    def __str__(self):
        return '<%s:%s>' % (self.identity()["name"], self.identifier)

    def identifier(self):
        """ Identifier returns the value of the object's unique identifier.
        """
        return ""
        

    def setIdentifier(self, ID):
        """ SetIdentifier sets the value of the object's unique identifier.
        """
        pass
        

    def identity(self):
        """ Identity returns the Identity of the object.
        """
        return clairvulnerabilityIdentity

    # Properties
    @property
    def description(self):
        """ Get description value.

          Notes:
              Description of the vulnerability

              
        """
        return self._description

    @description.setter
    def description(self, value):
        """ Set description value.

          Notes:
              Description of the vulnerability

              
        """
        self._description = value
    
    @property
    def fixedIn(self):
        """ Get fixedIn value.

          Notes:
              FixedIn decsribes all the features that has the fix

              
        """
        return self._fixedin

    @fixedIn.setter
    def fixedIn(self, value):
        """ Set fixedIn value.

          Notes:
              FixedIn decsribes all the features that has the fix

              
        """
        self._fixedin = value
    
    @property
    def link(self):
        """ Get link value.

          Notes:
              Link point to the vulnerability link

              
        """
        return self._link

    @link.setter
    def link(self, value):
        """ Set link value.

          Notes:
              Link point to the vulnerability link

              
        """
        self._link = value
    
    @property
    def name(self):
        """ Get name value.

          Notes:
              Name of th vulnerability

              
        """
        return self._name

    @name.setter
    def name(self, value):
        """ Set name value.

          Notes:
              Name of th vulnerability

              
        """
        self._name = value
    
    @property
    def namespaceName(self):
        """ Get namespaceName value.

          Notes:
              NamespaceName is the name of the namespace

              
        """
        return self._namespacename

    @namespaceName.setter
    def namespaceName(self, value):
        """ Set namespaceName value.

          Notes:
              NamespaceName is the name of the namespace

              
        """
        self._namespacename = value
    
    @property
    def severity(self):
        """ Get severity value.

          Notes:
              Severity of the vulnerability

              
        """
        return self._severity

    @severity.setter
    def severity(self, value):
        """ Set severity value.

          Notes:
              Severity of the vulnerability

              
        """
        self._severity = value
    
    def validate(self):
        """ Validate valides the current information stored into the structure.
        """
        errors = []

        if len(errors) > 0:
            return errors

        return None

    # clairvulnerabilityIdentity represents the Identity of the object
clairvulnerabilityIdentity = {"name": "clairvulnerability", "category": "clairvulnerabilities", "constructor": ClairVulnerability}