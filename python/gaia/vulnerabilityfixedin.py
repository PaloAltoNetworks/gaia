# -*- coding: utf-8 -*-

from pyelemental import RESTObject
from pyelemental import validate_string_in_list, validate_float_in_list, validate_int_in_list, validate_required_int, validate_required_float, validate_required_string, validate_required_time, validate_maximum_float, validate_minimum_float, validate_maximum_int, validate_minimum_int, validate_maximum_length, validate_minimum_length, validate_pattern


class VulnerabilityFixedIn(RESTObject):
    """ Represents a VulnerabilityFixedIn in the 

        Notes:
            None
    """

    def __init__(self, **kwargs):
        """ Initializes a VulnerabilityFixedIn instance

          Notes:
              You can specify all parameters while calling this methods.
              A special argument named `data` will enable you to load the
              object from a Python dictionary

          Examples:
              >>> vulnerabilityfixedin = VulnerabilityFixedIn(id=u'xxxx-xxx-xxx-xxx', name=u'VulnerabilityFixedIn')
              >>> vulnerabilityfixedin = VulnerabilityFixedIn(data=my_dict)
        """

        super(VulnerabilityFixedIn, self).__init__()

        # Read/Write Attributes
        
        self._name = None
        self._namespacename = None
        self._version = None
        
        self.expose_attribute(local_name="name", remote_name="name")
        self.expose_attribute(local_name="namespaceName", remote_name="namespaceName")
        self.expose_attribute(local_name="version", remote_name="version")

        self._compute_args(**kwargs)

    def __str__(self):
        return '<%s:%s>' % (self.identity()["name"], self.identifier)

    def identifier(self):
        """ Identifier returns the value of the object's unique identifier.
        """
        return ""
        

    def setIdentifier(self, ID):
        """ SetIdentifier sets the value of the object's unique identifier.
        """
        pass
        

    def identity(self):
        """ Identity returns the Identity of the object.
        """
        return vulnerabilityfixedinIdentity

    # Properties
    @property
    def name(self):
        """ Get name value.

          Notes:
              Name refers to the name of the feature

              
        """
        return self._name

    @name.setter
    def name(self, value):
        """ Set name value.

          Notes:
              Name refers to the name of the feature

              
        """
        self._name = value
    
    @property
    def namespaceName(self):
        """ Get namespaceName value.

          Notes:
              NamespaceName is the name of the namespace

              
        """
        return self._namespacename

    @namespaceName.setter
    def namespaceName(self, value):
        """ Set namespaceName value.

          Notes:
              NamespaceName is the name of the namespace

              
        """
        self._namespacename = value
    
    @property
    def version(self):
        """ Get version value.

          Notes:
              Version refers to the version that has the fix

              
        """
        return self._version

    @version.setter
    def version(self, value):
        """ Set version value.

          Notes:
              Version refers to the version that has the fix

              
        """
        self._version = value
    
    def validate(self):
        """ Validate valides the current information stored into the structure.
        """
        errors = []

        if len(errors) > 0:
            return errors

        return None

    # vulnerabilityfixedinIdentity represents the Identity of the object
vulnerabilityfixedinIdentity = {"name": "vulnerabilityfixedin", "category": "vulnerabilityfixedins", "constructor": VulnerabilityFixedIn}