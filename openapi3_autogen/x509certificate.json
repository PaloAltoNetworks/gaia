{
  "openapi": "3.0.3",
  "components": {
    "schemas": {
      "x509certificate": {
        "description": "This API allows you to retrieve an client certificate for API authentication.",
        "properties": {
          "CSR": {
            "description": "Contains the Certificate Signing Request (CSR) as a PEM-encoded string.",
            "example": "-----BEGIN CERTIFICATE REQUEST-----\nMIICvDCCAaQCAQAwdzELMAkGA1UEBhMCVVMxDTALBgNVBAgMBFV0YWgxDzANBgNV\nBAcMBkxpbmRvbjEWMBQGA1UECgwNRGlnaUNlcnQgSW5jLjERMA8GA1UECwwIRGln\naUNlcnQxHTAbBgNVBAMMFGV4YW1wbGUuZGlnaWNlcnQuY29tMIIBIjANBgkqhkiG\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEA8+To7d+2kPWeBv/orU3LVbJwDrSQbeKamCmo\nwp5bqDxIwV20zqRb7APUOKYoVEFFOEQs6T6gImnIolhbiH6m4zgZ/CPvWBOkZc+c\n1Po2EmvBz+AD5sBdT5kzGQA6NbWyZGldxRthNLOs1efOhdnWFuhI162qmcflgpiI\nWDuwq4C9f+YkeJhNn9dF5+owm8cOQmDrV8NNdiTqin8q3qYAHHJRW28glJUCZkTZ\nwIaSR6crBQ8TbYNE0dc+Caa3DOIkz1EOsHWzTx+n0zKfqcbgXi4DJx+C1bjptYPR\nBPZL8DAeWuA8ebudVT44yEp82G96/Ggcf7F33xMxe0yc+Xa6owIDAQABoAAwDQYJ\nKoZIhvcNAQEFBQADggEBAB0kcrFccSmFDmxox0Ne01UIqSsDqHgL+XmHTXJwre6D\nhJSZwbvEtOK0G3+dr4Fs11WuUNt5qcLsx5a8uk4G6AKHMzuhLsJ7XZjgmQXGECpY\nQ4mC3yT3ZoCGpIXbw+iP3lmEEXgaQL0Tx5LFl/okKbKYwIqNiyKWOMj7ZR/wxWg/\nZDGRs55xuoeLDJ/ZRFf9bI+IaCUd1YrfYcHIl3G87Av+r49YVwqRDT0VDV7uLgqn\n29XI1PpVUNCPQGn9p/eX6Qo7vpDaPybRtA2R7XLKjQaF9oXWeCUqy1hvJac9QFO2\n97Ob1alpHPoZ7mWiEuJwjBPii6a9M9G30nUo39lBi1w=\n-----END CERTIFICATE REQUEST-----",
            "type": "string"
          },
          "ID": {
            "description": "ID contains the identifier of the certificate.",
            "readOnly": true,
            "type": "string"
          },
          "certificate": {
            "description": "Certificate contains the certificate data in PEM format.",
            "readOnly": true,
            "type": "string"
          },
          "expirationDate": {
            "description": "ExpirationDate contains the requested expiration date.",
            "format": "date-time",
            "type": "string"
          },
          "extensions": {
            "description": "Extensions to add to the certificate. It must contains ASN1-encoded bytes,\nthemselves encoded in base64.",
            "type": "string"
          },
          "signer": {
            "default": "Public",
            "description": "Selects what CA should sign the certificate.",
            "enum": [
              "Public",
              "Namespace",
              "System"
            ]
          },
          "signerID": {
            "description": "Selects the ID of the CA that should sign the certificate when signer is set to\nNamespace.",
            "type": "string"
          },
          "subjectOverride": {
            "$ref": "./pkixname#/components/schemas/pkixname"
          },
          "unrevocable": {
            "description": "If set to true, the certificate is considered short lived and it will not be\npossible to revoke it.",
            "type": "boolean"
          },
          "usage": {
            "default": "Client",
            "description": "Usage defines the requested key usage.",
            "enum": [
              "Client",
              "Server",
              "ServerClient"
            ]
          }
        },
        "required": [
          "CSR"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "dev@aporeto.com",
      "name": "Aporeto Inc.",
      "url": "go.aporeto.io/api"
    },
    "license": {
      "name": "TODO"
    },
    "termsOfService": "https://localhost/TODO",
    "title": "x509certificate",
    "version": "1.0"
  },
  "paths": {
    "/x509certificates": {
      "post": {
        "description": "Creates a new X.509 certificate.",
        "operationId": "create-a-new-x509certificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/x509certificate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/x509certificate"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "internal/x509",
          "barret"
        ]
      }
    }
  },
  "tags": [
    {
      "description": "This tag is for group 'internal/x509'",
      "name": "internal/x509"
    },
    {
      "description": "This tag is for package 'barret'",
      "name": "barret"
    }
  ]
}
