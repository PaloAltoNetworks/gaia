{
  "openapi": "3.0.3",
  "components": {
    "schemas": {
      "pingprobe": {
        "description": "Represents the result of a unique ping probe. They are aggregated into a\nPingResult.",
        "properties": {
          "ACLPolicyAction": {
            "description": "Action of the ACL policy.",
            "type": "string"
          },
          "ACLPolicyID": {
            "description": "ID of the ACL policy.",
            "type": "string"
          },
          "ID": {
            "description": "Identifier of the object.",
            "readOnly": true,
            "type": "string"
          },
          "RTT": {
            "description": "Time taken for a single request-response to complete.",
            "type": "string"
          },
          "applicationListening": {
            "description": "If true, application responded to the request.",
            "type": "boolean"
          },
          "claims": {
            "description": "Claims of the processing unit.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "claimsType": {
            "description": "Type of claims reported.",
            "enum": [
              "Transmitted",
              "Received"
            ],
            "example": [
              "Transmitted"
            ]
          },
          "createTime": {
            "description": "Creation date of the object.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "enforcerID": {
            "description": "ID of the enforcer.",
            "example": "xxx-xxx-xxx-xxx",
            "type": "string"
          },
          "enforcerNamespace": {
            "description": "Namespace of the enforcer.",
            "example": "/my/ns",
            "type": "string"
          },
          "enforcerVersion": {
            "description": "Semantic version of the enforcer.",
            "type": "string"
          },
          "error": {
            "description": "A non-empty error indicates a failure.",
            "type": "string"
          },
          "excludedNetworks": {
            "description": "If true, destination IP is in `excludedNetworks`.",
            "type": "boolean"
          },
          "fourTuple": {
            "description": "Four tuple in the format \u003csip:dip:spt:dpt\u003e.",
            "type": "string"
          },
          "isServer": {
            "description": "If true, the report was generated by the server.",
            "type": "boolean"
          },
          "iterationIndex": {
            "description": "Holds the iteration number this probe is attached to.",
            "type": "integer"
          },
          "namespace": {
            "description": "Namespace tag attached to an entity.",
            "readOnly": true,
            "type": "string"
          },
          "payloadSize": {
            "description": "Size of the payload attached to the packet.",
            "type": "integer"
          },
          "payloadSizeType": {
            "description": "Type of the payload size.",
            "enum": [
              "Transmitted",
              "Received"
            ],
            "example": [
              "Transmitted"
            ]
          },
          "peerCertExpiry": {
            "description": "Represents the expiry of the peer certificate.",
            "type": "string"
          },
          "peerCertIssuer": {
            "description": "Represents the issuer of the peer certificate.",
            "type": "string"
          },
          "peerCertSubject": {
            "description": "Represents the subject of the peer certificate.",
            "type": "string"
          },
          "pingID": {
            "description": "PingID unique to a single ping control.",
            "example": "xxx-xxx-xxx-xxx",
            "type": "string"
          },
          "policyAction": {
            "description": "Action of the policy.",
            "type": "string"
          },
          "policyID": {
            "description": "ID of the policy.",
            "type": "string"
          },
          "policyNamespace": {
            "description": "ID of the policy.",
            "type": "string"
          },
          "processingUnitID": {
            "description": "ID of the reporting processing unit.",
            "type": "string"
          },
          "protocol": {
            "description": "Protocol used for the communication.",
            "type": "integer"
          },
          "remoteController": {
            "description": "Controller of the remote endpoint.",
            "type": "string"
          },
          "remoteEndpointType": {
            "description": "Represents the remote endpoint type.",
            "enum": [
              "ProcessingUnit",
              "External"
            ],
            "example": [
              "External"
            ]
          },
          "remoteNamespace": {
            "description": "Namespace of the remote processing unit.",
            "type": "string"
          },
          "remoteNamespaceType": {
            "description": "Type of the namespace reported.",
            "enum": [
              "Plain",
              "Hash"
            ],
            "example": [
              "Plain"
            ]
          },
          "remoteProcessingUnitID": {
            "description": "ID of the remote processing unit.",
            "type": "string"
          },
          "seqNum": {
            "description": "Sequence number of the TCP packet. number.",
            "type": "integer"
          },
          "serviceID": {
            "description": "ID of the service If the service type is a proxy.",
            "type": "string"
          },
          "serviceType": {
            "description": "Type of the service.",
            "readOnly": true,
            "type": "string"
          },
          "targetTCPNetworks": {
            "description": "If true, destination IP is in `targetTCPNetworks`.",
            "type": "boolean"
          },
          "type": {
            "description": "Type of the report.",
            "enum": [
              "Request",
              "Response"
            ],
            "example": [
              "Request"
            ]
          },
          "updateTime": {
            "description": "Last update date of the object.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "claimsType",
          "enforcerID",
          "enforcerNamespace",
          "payloadSizeType",
          "pingID",
          "remoteEndpointType",
          "remoteNamespaceType",
          "type"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "dev@aporeto.com",
      "name": "Aporeto Inc.",
      "url": "go.aporeto.io/api"
    },
    "license": {
      "name": "TODO"
    },
    "termsOfService": "https://localhost/TODO",
    "title": "pingprobe",
    "version": "1.0"
  },
  "paths": {
    "/pingprobes/{id}": {
      "get": {
        "description": "Retrieves a ping result.",
        "operationId": "get-pingprobe-by-ID",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pingprobe"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "core/enforcer",
          "guy"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    }
  },
  "tags": [
    {
      "description": "This tag is for group 'core/enforcer'",
      "name": "core/enforcer"
    },
    {
      "description": "This tag is for package 'guy'",
      "name": "guy"
    }
  ]
}
