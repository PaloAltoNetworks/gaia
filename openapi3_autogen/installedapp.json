{
  "openapi": "3.0.3",
  "components": {
    "schemas": {
      "installedapp": {
        "description": "Represents an installed application.",
        "properties": {
          "ID": {
            "description": "Identifier of the object.",
            "readOnly": true,
            "type": "string"
          },
          "additionalConfiguration": {
            "description": "Additional configuration of the app is needed by the app itself.",
            "type": "boolean"
          },
          "annotations": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": "Stores additional information about an entity.",
            "type": "object"
          },
          "associatedTags": {
            "description": "List of tags attached to an entity.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "categoryID": {
            "description": "The category ID of the application.",
            "readOnly": true,
            "type": "string"
          },
          "checkPublicEndpoint": {
            "description": "If true, will look for the public endpoints and store them as annotations in the\ninstalled app.",
            "type": "boolean"
          },
          "createTime": {
            "description": "Creation date of the object.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "currentVersion": {
            "description": "Version of the installed application.",
            "type": "string"
          },
          "externalWindowButton": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Adds a button in the UI.",
            "type": "object"
          },
          "name": {
            "description": "Name of the entity.",
            "example": "the name",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace tag attached to an entity.",
            "readOnly": true,
            "type": "string"
          },
          "normalizedTags": {
            "description": "Contains the list of normalized tags of the entities.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "parameters": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "Contains the computed parameters to start the application.",
            "type": "object"
          },
          "protected": {
            "description": "Defines if the object is protected.",
            "type": "boolean"
          },
          "status": {
            "default": "Unknown",
            "description": "Status of the application.",
            "enum": [
              "Unknown",
              "Deploying",
              "Initializing",
              "Running",
              "Undeploying",
              "Error"
            ],
            "readOnly": true
          },
          "statusMessage": {
            "description": "Reason for the status of the application.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Last update date of the object.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "dev@aporeto.com",
      "name": "Aporeto Inc.",
      "url": "go.aporeto.io/api"
    },
    "license": {
      "name": "TODO"
    },
    "termsOfService": "https://localhost/TODO",
    "title": "installedapp",
    "version": "1.0"
  },
  "paths": {
    "/installedapps": {
      "get": {
        "description": "Retrieves the list of installed apps.",
        "operationId": "get-all-installedapps",
        "parameters": [
          {
            "description": "Filtering query. Consequent `q` parameters will form an or.",
            "example": "associatedTags contains ['$name=hello'] or type == 'Docker'",
            "in": "query",
            "name": "q",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of tags to filter on. This parameter is deprecated.",
            "example": "a=a",
            "in": "query",
            "name": "tag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/installedapp"
                  },
                  "type": "array"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "integration/app",
          "highwind"
        ]
      },
      "post": {
        "description": "Installs a new app.",
        "operationId": "create-a-new-installedapp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/installedapp"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/installedapp"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "integration/app",
          "highwind"
        ]
      }
    },
    "/installedapps/{id}": {
      "delete": {
        "description": "Deletes the application with the given ID.",
        "operationId": "delete-installedapp-by-ID",
        "parameters": [
          {
            "description": "Filtering query. Consequent `q` parameters will form an or.",
            "example": "associatedTags contains ['$name=hello'] or type == 'Docker'",
            "in": "query",
            "name": "q",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/installedapp"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "integration/app",
          "highwind"
        ]
      },
      "get": {
        "description": "Retrieves the application with the given ID.",
        "operationId": "get-installedapp-by-ID",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/installedapp"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "integration/app",
          "highwind"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Updates the application with the given ID.",
        "operationId": "update-installedapp-by-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/installedapp"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/installedapp"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "integration/app",
          "highwind"
        ]
      }
    },
    "/installedapps/{id}/logs": {
      "get": {
        "description": "Returns the logs for an application.",
        "operationId": "get-all-logs-for-a-given-installedapp",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./log#/components/schemas/log"
                  },
                  "type": "array"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "integration/app",
          "highwind"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    }
  },
  "tags": [
    {
      "description": "This tag is for group 'integration/app'",
      "name": "integration/app"
    },
    {
      "description": "This tag is for package 'highwind'",
      "name": "highwind"
    }
  ]
}
