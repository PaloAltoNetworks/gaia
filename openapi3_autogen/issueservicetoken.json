{
  "openapi": "3.0.3",
  "components": {
    "schemas": {
      "issueservicetoken": {
        "description": "This is an internal API. Services can call this API to issue service tokens on\nbehalf of users.",
        "properties": {
          "audience": {
            "description": "Audience is the valid audience for this token.",
            "example": "my-service",
            "type": "string"
          },
          "namespaceID": {
            "description": "The ID of the corresponding namespace.",
            "example": 12341234,
            "type": "string"
          },
          "serviceClaims": {
            "description": "ServiceClaims is a list of service claims that have been validated provided as\nkey/value pairs. If the same key is provided multiple times it will be converted\nto an array. The claims  will appear under the Data section of the token.",
            "example": [
              "org=acme",
              "sub=test"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "signingKeyID": {
            "description": "SigningKeyID holds the ID of the private certificate to use to sign the token.",
            "example": 2739128,
            "type": "string"
          },
          "subject": {
            "description": "The subject claims of the token.",
            "example": "joe@acme.com",
            "type": "string"
          },
          "token": {
            "description": "Token contains the generated token.",
            "readOnly": true,
            "type": "string"
          },
          "userClaims": {
            "description": "UserClaims is a list of user claims that have been validated provided as\nkey/value pairs. If the same key is provided multiple times it will be converted\nto an array. The claims  will appear under the Data section of the token.",
            "example": [
              "org=acme",
              "sub=test"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "validity": {
            "default": "15m",
            "description": "Validity contains the token validity duration.",
            "type": "string"
          }
        },
        "required": [
          "audience",
          "signingKeyID",
          "subject",
          "validity"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "dev@aporeto.com",
      "name": "Aporeto Inc.",
      "url": "go.aporeto.io/api"
    },
    "license": {
      "name": "TODO"
    },
    "termsOfService": "https://localhost/TODO",
    "title": "issueservicetoken",
    "version": "1.0"
  },
  "paths": {
    "/issueservicetokens": {
      "post": {
        "description": "Internal API to issue service tokens.",
        "operationId": "create-a-new-issueservicetoken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/issueservicetoken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/issueservicetoken"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "internal/servicetokens",
          "barret"
        ]
      }
    }
  },
  "tags": [
    {
      "description": "This tag is for group 'internal/servicetokens'",
      "name": "internal/servicetokens"
    },
    {
      "description": "This tag is for package 'barret'",
      "name": "barret"
    }
  ]
}
