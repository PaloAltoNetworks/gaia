{
  "components": {
    "schemas": {
      "issue": {
        "description": "Issues a new Microsegmentation token according to given data.",
        "properties": {
          "audience": {
            "description": "If given, the issued token will only be valid for the specified namespace.\nRefer to [JSON Web Token (JWT)RFC\n7519](https://tools.ietf.org/html/rfc7519#section-4.1.3).\nfor further information.",
            "example": "aud:*:*:/namespace",
            "type": "string"
          },
          "claims": {
            "description": "The claims in the token. It is only set is the parameter `asCookie` is given.",
            "properties": {
              "aud": {
                "type": "string"
              },
              "data": {
                "type": "object"
              },
              "exp": {
                "format": "int64",
                "type": "integer"
              },
              "iat": {
                "format": "int64",
                "type": "integer"
              },
              "iss": {
                "type": "string"
              },
              "jti": {
                "type": "string"
              },
              "nbf": {
                "format": "int64",
                "type": "integer"
              },
              "opaque": {
                "type": "object"
              },
              "quota": {
                "type": "integer"
              },
              "realm": {
                "type": "string"
              },
              "restrictions": {
                "properties": {
                  "namespace": {
                    "type": "string"
                  },
                  "networks": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "perms": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "sub": {
                "type": "string"
              }
            },
            "readOnly": true,
            "type": "object"
          },
          "data": {
            "deprecated": true,
            "description": "Contains additional data. The value depends on the issuer type.",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "Contains various additional information. Meaning depends on the `realm`.",
            "example": {
              "vinceAccount": "acme",
              "vinceOTP": 665435,
              "vincePassword": "s3cr3t"
            },
            "type": "object"
          },
          "opaque": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Opaque data that will be included in the issued token.",
            "type": "object"
          },
          "quota": {
            "description": "Restricts the number of times the issued token can be used.",
            "type": "integer"
          },
          "realm": {
            "description": "The authentication realm. This will define how to verify\ncredentials from internal or external source of authentication.",
            "enum": [
              "AWSSecurityToken",
              "Certificate",
              "Google",
              "LDAP",
              "Vince",
              "GCPIdentityToken",
              "AzureIdentityToken",
              "OIDC",
              "SAML",
              "AporetoIdentityToken",
              "PCIdentityToken"
            ],
            "example": "Vince"
          },
          "restrictedNamespace": {
            "description": "Restricts the namespace where the token can be used.\n\nFor instance, if you have have access to `/namespace` and below, you can\ntell the policy engine that it should restrict further more to\n`/namespace/child`.\n\nRestricting to a namespace you don't have initially access according to the\npolicy engine has no effect and may end up making the token unusable.",
            "example": "/namespace",
            "type": "string"
          },
          "restrictedNetworks": {
            "description": "Restricts the networks from where the token can be used. This will reduce the\nexisting set of authorized networks that normally apply to the token according\nto the policy engine.\n\nFor instance, If you have authorized access from `0.0.0.0/0` (by default) or\nfrom\n`10.0.0.0/8`, you can ask for a token that will only be valid if used from\n`10.1.0.0/16`.\n\nRestricting to a network that is not initially authorized by the policy\nengine has no effect and may end up making the token unusable.",
            "example": [
              "10.0.0.0/8",
              "127.0.0.1/32"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "restrictedPermissions": {
            "description": "Restricts the permissions of token. This will reduce the existing permissions\nthat normally apply to the token according to the policy engine.\n\nFor instance, if you have administrative role, you can ask for a token that will\ntell the policy engine to reduce the permission it would have granted to what is\ngiven defined in the token.\n\nRestricting to some permissions you don't initially have according to the policy\nengine has no effect and may end up making the token unusable.",
            "example": [
              "@auth:role=enforcer",
              "namespace,post"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "token": {
            "description": "The token to use for the registration.",
            "readOnly": true,
            "type": "string"
          },
          "validity": {
            "default": "24h",
            "description": "Configures the maximum length of validity for a token, using\n[Golang duration syntax](https://golang.org/pkg/time/#example_Duration). If it\nis\nbigger than the configured max validity, it will be capped. Default: `24h`.",
            "type": "string"
          }
        },
        "required": [
          "realm"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "dev@aporeto.com",
      "name": "Aporeto Inc.",
      "url": "go.aporeto.io/api"
    },
    "license": {
      "name": "TODO"
    },
    "termsOfService": "https://localhost/TODO",
    "title": "issue",
    "version": "1.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/issue": {
      "post": {
        "description": "Issues a new token.",
        "operationId": "create-a-new-issue",
        "parameters": [
          {
            "description": "If set to true, the token will be delivered in a secure cookie, and not in the response body.",
            "in": "query",
            "name": "asCookie",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Token to verify.",
            "example": "xxx.yyyyyyyy.zzzz",
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/issue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/issue"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "core/authentication",
          "midgard"
        ]
      }
    }
  },
  "tags": [
    {
      "description": "This tag is for group 'core/authentication'",
      "name": "core/authentication"
    },
    {
      "description": "This tag is for package 'midgard'",
      "name": "midgard"
    }
  ]
}
