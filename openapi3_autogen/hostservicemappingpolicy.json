{
  "openapi": "3.0.3",
  "components": {
    "schemas": {
      "hostservicemappingpolicy": {
        "description": "Host service mapping allows you to map host services to the enforcers that\nshould\nimplement them. You must map host services to one or more enforcers for the host\nservices to have any effect.",
        "properties": {
          "ID": {
            "description": "Identifier of the object.",
            "readOnly": true,
            "type": "string"
          },
          "activeDuration": {
            "description": "Defines for how long the policy will be active according to the\n`activeSchedule`.",
            "type": "string"
          },
          "activeSchedule": {
            "description": "Defines when the policy should be active using the cron notation.\nThe policy will be active for the given `activeDuration`.",
            "type": "string"
          },
          "annotations": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": "Stores additional information about an entity.",
            "type": "object"
          },
          "associatedTags": {
            "description": "List of tags attached to an entity.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "createTime": {
            "description": "Creation date of the object.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Description of the object.",
            "type": "string"
          },
          "disabled": {
            "description": "Defines if the property is disabled.",
            "type": "boolean"
          },
          "fallback": {
            "description": "Indicates that this is fallback policy. It will only be\napplied if no other policies have been resolved. If the policy is also\npropagated it will become a fallback for children namespaces.",
            "type": "boolean"
          },
          "metadata": {
            "description": "Contains tags that can only be set during creation, must all start\nwith the '@' prefix, and should only be used by external systems.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the entity.",
            "example": "the name",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace tag attached to an entity.",
            "readOnly": true,
            "type": "string"
          },
          "normalizedTags": {
            "description": "Contains the list of normalized tags of the entities.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "object": {
            "description": "A tag or tag expression identifying the host service(s) to be mapped.",
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "array"
          },
          "propagate": {
            "description": "Propagates the policy to all of its children.",
            "type": "boolean"
          },
          "protected": {
            "description": "Defines if the object is protected.",
            "type": "boolean"
          },
          "subject": {
            "description": "A tag or tag expression identifying the enforcer(s) that should implement\nthe specified host service(s).",
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "array"
          },
          "updateTime": {
            "description": "Last update date of the object.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "dev@aporeto.com",
      "name": "Aporeto Inc.",
      "url": "go.aporeto.io/api"
    },
    "license": {
      "name": "TODO"
    },
    "termsOfService": "https://localhost/TODO",
    "title": "hostservicemappingpolicy",
    "version": "1.0"
  },
  "paths": {
    "/hostservicemappingpolicies": {
      "get": {
        "description": "Retrieves the list of host service mappings.",
        "operationId": "get-all-hostservicemappingpolicies",
        "parameters": [
          {
            "description": "Also retrieve the objects that propagate down.",
            "in": "query",
            "name": "propagated",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filtering query. Consequent `q` parameters will form an or.",
            "example": "associatedTags contains ['$name=hello'] or type == 'Docker'",
            "in": "query",
            "name": "q",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/hostservicemappingpolicy"
                  },
                  "type": "array"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "policy/hosts",
          "squall"
        ]
      },
      "post": {
        "description": "Creates a new host service mapping.",
        "operationId": "create-a-new-hostservicemappingpolicy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hostservicemappingpolicy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hostservicemappingpolicy"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "policy/hosts",
          "squall"
        ]
      }
    },
    "/hostservicemappingpolicies/{id}": {
      "delete": {
        "description": "Deletes the mapping with the given ID.",
        "operationId": "delete-hostservicemappingpolicy-by-ID",
        "parameters": [
          {
            "description": "Filtering query. Consequent `q` parameters will form an or.",
            "example": "associatedTags contains ['$name=hello'] or type == 'Docker'",
            "in": "query",
            "name": "q",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hostservicemappingpolicy"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "policy/hosts",
          "squall"
        ]
      },
      "get": {
        "description": "Retrieves the mapping with the given ID.",
        "operationId": "get-hostservicemappingpolicy-by-ID",
        "parameters": [
          {
            "description": "Also retrieve the objects that propagate down.",
            "in": "query",
            "name": "propagated",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hostservicemappingpolicy"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "policy/hosts",
          "squall"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Updates the mapping with the given ID.",
        "operationId": "update-hostservicemappingpolicy-by-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hostservicemappingpolicy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hostservicemappingpolicy"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "policy/hosts",
          "squall"
        ]
      }
    },
    "/hostservicemappingpolicies/{id}/enforcers": {
      "get": {
        "description": "Returns the list of enforcers that are affected by this mapping.",
        "operationId": "get-all-enforcers-for-a-given-hostservicemappingpolicy",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./enforcer#/components/schemas/enforcer"
                  },
                  "type": "array"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "core/enforcer",
          "squall"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/hostservicemappingpolicies/{id}/hostservices": {
      "get": {
        "description": "Returns the list of host services that are referenced by this mapping.",
        "operationId": "get-all-hostservices-for-a-given-hostservicemappingpolicy",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./hostservice#/components/schemas/hostservice"
                  },
                  "type": "array"
                }
              }
            },
            "description": "n/a"
          }
        },
        "tags": [
          "policy/hosts",
          "squall"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    }
  },
  "tags": [
    {
      "description": "This tag is for group 'policy/hosts'",
      "name": "policy/hosts"
    },
    {
      "description": "This tag is for package 'squall'",
      "name": "squall"
    }
  ]
}
