# Model
model:
  rest_name: processingunit
  resource_name: processingunits
  entity_name: ProcessingUnit
  package: squall
  description: |-
    A Processing Unit reprents anything that can compute. It can be a Docker
    container, or a simple Unix process. They are created, updated and deleted by
    the system as they come and go. You can only modify its tags.  Processing Units
    use Network Access Policies to define which other Processing Units or External
    Services they can communicate with and File Access Policies to define what File
    Paths they can use.
  aliases:
  - pu
  - pus
  create: true
  get: true
  update: true
  delete: true
  extends:
  - '@archivable'
  - '@base'
  - '@described'
  - '@identifiable-pk-stored'
  - '@metadatable'
  - '@named'

# Attributes
attributes:
  v1:
  - name: enforcerID
    description: EnforcerID is the ID of the enforcer associated with the processing
      unit.
    type: string
    exposed: true
    stored: true
    filterable: true
    format: free

  - name: lastSyncTime
    description: LastSyncTime is the time when the policy was last resolved.
    type: time
    exposed: true
    stored: true
    autogenerated: true
    orderable: true

  - name: nativeContextID
    description: NativeContextID is the Docker UUID or service PID.
    type: string
    exposed: true
    stored: true
    filterable: true
    format: free

  - name: networkServices
    description: |-
      NetworkServices is the list of services that this processing unit has declared
      that it will be listening to. This can happen either with an activation command
      or by exposing the ports in a container manifest.
    type: external
    exposed: true
    subtype: processing_unit_services_list
    stored: true
    filterable: true
    orderable: true

  - name: operationalStatus
    description: OperationalStatus of the processing unit.
    type: enum
    exposed: true
    stored: true
    allowed_choices:
    - Initialized
    - Paused
    - Running
    - Stopped
    - Terminated
    default_value: Initialized
    filterable: true

  - name: type
    description: Type of the container ecosystem.
    type: enum
    exposed: true
    stored: true
    required: true
    creation_only: true
    allowed_choices:
    - Docker
    - LinuxService
    - RKT
    - User
    example_value: Docker
    filterable: true

# Relations
relations:
- rest_name: service
  descriptions:
    get: Retrieves the services used by a processing unit.
  get: true

- rest_name: fileaccess
  descriptions:
    get: Retrieves the file accesses done by the processing unit.
  get: true

- rest_name: renderedpolicy
  descriptions:
    get: Retrieves the policies for the processing unit.
  get: true

- rest_name: vulnerability
  descriptions:
    get: Retrieves the vulnerabilities affecting the processing unit.
  get: true
