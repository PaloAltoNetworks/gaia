# Model
model:
  rest_name: processingunit
  resource_name: processingunits
  entity_name: ProcessingUnit
  package: squall
  group: core/processingunit
  description: |-
    A processing unit represents anything that can compute. It can be a Docker
    container or a simple Unix process. Processing units are created, updated, and
    deleted by
    the system as they come and go. You can only modify their tags. Processing units
    use network policies to define which other processing units or external
    networks they can communicate with and file access policies to define what file
    paths they can use.
  aliases:
  - pu
  - pus
  get:
    description: Retrieves the processing unit with the given ID.
    global_parameters:
    - $archivable
  update:
    description: Updates the processing unit with the given ID.
  delete:
    description: Deletes the processing unit with the given ID.
    global_parameters:
    - $filtering
  extends:
  - '@zoned'
  - '@base'
  - '@namespaced'
  - '@archivable'
  - '@described'
  - '@identifiable-stored'
  - '@metadatable'
  - '@named'
  - '@timeable'

# Indexes
indexes:
- - namespace
  - operationalStatus
  - archived
- - namespace
  - normalizedTags
  - archived
- - namespace
  - archived
  - createTime
  - lastPokeTime

# Attributes
attributes:
  v1:
  - name: collectInfo
    description: |-
      A value of `true` indicates to the enforcer that it needs to collect information
      for
      this processing unit.
    type: boolean
    exposed: true
    stored: true

  - name: collectedInfo
    description: |-
      Represents the latest information collected by the enforcer for this processing
      unit.
    type: external
    exposed: true
    subtype: map[string]string
    stored: true

  - name: enforcementStatus
    description: |-
      Contains the state of the enforcer for the processing unit. `Inactive`
      (default):
      the enforcer is not enforcing any host service. `Active`: the enforcer is
      enforcing
      a host service. `Failed`.
    type: enum
    exposed: true
    stored: true
    allowed_choices:
    - Active
    - Failed
    - Inactive
    default_value: Inactive
    filterable: true

  - name: enforcerID
    description: The ID of the enforcer associated with the processing unit.
    type: string
    exposed: true
    stored: true
    filterable: true

  - name: enforcerNamespace
    description: The namespace of the enforcer associated with the processing unit.
    type: string
    exposed: true
    stored: true
    filterable: true

  - name: image
    description: |-
      This field is deprecated and it is there for backward compatibility. Use
      `images` instead.
    type: string
    exposed: true
    deprecated: true

  - name: images
    description: List of images or executable paths used by the processing unit.
    type: list
    exposed: true
    subtype: string
    stored: true
    creation_only: true
    filterable: true

  - name: lastCollectionTime
    description: The date and time when the information was collected.
    type: time
    exposed: true
    stored: true

  - name: lastPokeTime
    description: Last poke is the time when the pu got last poked.
    type: time
    stored: true

  - name: lastSyncTime
    description: The date and time of the last policy resolution.
    type: time
    exposed: true
    stored: true
    autogenerated: true
    orderable: true

  - name: nativeContextID
    description: The Docker UUID or service PID.
    type: string
    exposed: true
    stored: true

  - name: networkServices
    description: |-
      The list of services that this processing unit has declared that it will be
      listening to,
      either in its activation command or by exposing the ports in a container
      manifest.
    type: refList
    exposed: true
    subtype: processingunitservice
    stored: true
    orderable: true
    validations:
    - $processingunitservices
    extensions:
      refMode: pointer

  - name: operationalStatus
    description: |-
      Operational status of the processing unit: `Initialized` (default), `Paused`,
      `Running`,
      `Stopped`, or `Terminated`.
    type: enum
    exposed: true
    stored: true
    allowed_choices:
    - Initialized
    - Paused
    - Running
    - Stopped
    - Terminated
    default_value: Initialized
    filterable: true

  - name: tracing
    description: Indicates if this processing unit must be placed in tracing mode.
    type: ref
    exposed: true
    subtype: tracemode
    stored: true
    extensions:
      refMode: pointer

  - name: type
    description: |-
      Type of processing unit: `APIGateway`, `Docker`, `Host`, `HostService`,
      `LinuxService`,
      `RKT`, `User`, or `SSHSession`.
    type: enum
    exposed: true
    stored: true
    creation_only: true
    allowed_choices:
    - APIGateway
    - Docker
    - Host
    - HostService
    - LinuxService
    - RKT
    - User
    - SSHSession
    example_value: Docker
    filterable: true

  - name: unreachable
    description: |-
      The Aporeto control plane sets this value to `true` if it hasn't heard from the
      processing
      unit for more than five minutes.
    type: boolean
    exposed: true
    stored: true
    read_only: true
    autogenerated: true

# Relations
relations:
- rest_name: poke
  get:
    description: |-
      Sends a poke empty object. This will send a snapshot of the processing unit to
      the time series database.
    parameters:
      entries:
      - name: enforcementStatus
        description: If set, changes the enforcement status of the processing unit
          alongside with the poke.
        type: enum
        allowed_choices:
        - Failed
        - Inactive
        - Active

      - name: forceFullPoke
        description: If set, it will trigger a full poke (slower).
        type: boolean

      - name: notify
        description: Can be sent to trigger a `ProcessingUnitRefresh` event that will
          be handled by the enforcer. If this is set, all other additional parameters
          will be ignored.
        type: boolean

      - name: status
        description: If set, changes the status of the processing unit alongside with
          the poke.
        type: enum
        allowed_choices:
        - Initialized
        - Paused
        - Running
        - Stopped
        example_value: Running

      - name: ts
        description: time of report. If not set, local server time will be used.
        type: time

- rest_name: renderedpolicy
  get:
    description: Retrieves the policies for the processing unit.
    parameters:
      entries:
      - name: csr
        description: CSR to sign.
        type: string
        example_value: |-
          --- BEGIN CSR ---
          xxx-xxx-xxx-xxx
          --- END CSR ---

- rest_name: service
  get:
    description: Retrieves the services used by a processing unit.

- rest_name: vulnerability
  get:
    description: Retrieves the vulnerabilities affecting the processing unit.
