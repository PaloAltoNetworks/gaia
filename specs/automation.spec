# Model
model:
  rest_name: automation
  resource_name: automations
  entity_name: Automation
  package: sephiroth
  description: An automation needs documentation.
  aliases:
  - autos
  - auto
  get:
    description: Retrieves the object with the given ID.
  update:
    description: Updates the object with the given ID.
  delete:
    description: Deletes the object with the given ID.
  extends:
  - '@base'
  - '@described'
  - '@disabled'
  - '@identifiable-pk-stored'
  - '@named'

# Attributes
attributes:
  v1:
  - name: actions
    description: Action contains the code that will be executed if the condition is
      met.
    type: list
    exposed: true
    subtype: string
    stored: true

  - name: condition
    description: |-
      Condition contains the code that will be executed to decide if any action should
      be taken.
    type: string
    exposed: true
    stored: true
    required: true
    example_value: 'function when(m, params) { return { continue: true }}'

  - name: entitlements
    description: Entitlements declares which operations are allowed on which identities.
    type: external
    exposed: true
    subtype: automation_entitlements
    stored: true

  - name: errors
    description: Error contains the eventual error of the last run.
    type: list
    exposed: true
    subtype: string
    stored: true
    read_only: true
    autogenerated: true

  - name: events
    description: |-
      Events contains the identity and operation an event must have to trigger the
      automation.
    type: external
    exposed: true
    subtype: automation_events
    stored: true

  - name: lastExecTime
    description: LastExecTime holds the last successful execution tine.
    type: time
    exposed: true
    stored: true
    read_only: true
    autogenerated: true

  - name: parameters
    description: Parameters are passed to the functions.
    type: external
    exposed: true
    subtype: automation_parameters
    stored: true

  - name: schedule
    description: |-
      Schedule tells when to run the automation. Must be a valid CRON format. This
      only applies if the trigger is set to Time.
    type: string
    exposed: true
    stored: true

  - name: stdout
    description: Stdout contains the last run standard output.
    type: string
    exposed: true
    stored: true
    read_only: true
    autogenerated: true

  - name: token
    description: |-
      Token holds the unique access token used as a password to trigger the
      authentication. It will be visible only after creation.
    type: string
    exposed: true
    stored: true
    creation_only: true
    autogenerated: true
    secret: true

  - name: tokenRenew
    description: If set to true a new token will be issued, and the previous one invalidated.
    type: boolean
    exposed: true

  - name: trigger
    description: Trigger controls when the automation should be triggered.
    type: enum
    exposed: true
    stored: true
    allowed_choices:
    - Event
    - RemoteCall
    - Time
    default_value: Time
    filterable: true
    orderable: true

# Relations
relations:
- rest_name: trigger
  get:
    description: |-
      Allows a system to trigger the automation if its `triggerType` property is set
      to `RemoteCall`.
  create:
    description: |-
      Allows a system to trigger the automation if its `triggerType` property is set
      to `RemoteCall`.
