_app_parameters:
  elemental:
    type: '[]*types.AppParameter'
    init: '[]*types.AppParameter{}'
    import: go.aporeto.io/gaia/types

_app_versionparameters:
  elemental:
    type: map[string][]*types.AppParameter
    init: map[string][]*types.AppParameter{}
    import: go.aporeto.io/gaia/types

_arch_list:
  elemental:
    type: types.ArchitecturesTypeList
    init: types.ArchitecturesTypeList{}
    import: go.aporeto.io/gaia/types

_audit_profile_rule_list:
  elemental:
    type: types.AuditProfileRuleList
    init: types.AuditProfileRuleList{}
    import: go.aporeto.io/gaia/types

_automation_template_parameters:
  elemental:
    type: map[string]types.AutomationTemplateParameter
    init: map[string]types.AutomationTemplateParameter{}
    import: go.aporeto.io/gaia/types

_cap_map:
  elemental:
    type: types.CapabilitiesTypeMap
    init: types.CapabilitiesTypeMap{}
    import: go.aporeto.io/gaia/types

_exposed_api_list:
  elemental:
    type: types.ExposedAPIList
    init: types.ExposedAPIList{}
    import: go.aporeto.io/gaia/types

_ip_list:
  elemental:
    type: types.IPList
    init: types.IPList{}
    import: go.aporeto.io/gaia/types

_syscall_action:
  elemental:
    type: types.SyscallEnforcementAction
    import: go.aporeto.io/gaia/types

_syscall_rules:
  elemental:
    type: types.SyscallEnforcementRulesMap
    init: types.SyscallEnforcementRulesMap{}
    import: go.aporeto.io/gaia/types

_time_series_results:
  elemental:
    type: '[]*types.TimeSeriesQueryResults'
    init: '[]*types.TimeSeriesQueryResults{}'
    import: go.aporeto.io/gaia/types

_vulnerability_level:
  elemental:
    type: constants.Vulnerability
    init: constants.VulnerabilityUnknown
    import: go.aporeto.io/gaia/constants

automation_entitlements:
  elemental:
    type: map[string][]elemental.Operation
    init: map[string][]elemental.Operation{}

automation_events:
  elemental:
    type: map[string][]elemental.EventType
    init: map[string][]elemental.EventType{}

claims:
  elemental:
    type: '*claims.MidgardClaims'
    init: claims.NewMidgardClaims()
    import: go.aporeto.io/midgard-lib/claims

elemental_identitifable:
  elemental:
    type: elemental.Identifiable

elemental_operation:
  elemental:
    type: elemental.Operation

list_of_lists_of_objects:
  elemental:
    type: '[][]interface{}'
    init: '[][]interface{}{}'

list_of_lists_of_strings:
  elemental:
    type: '[][]string'
    init: '[][]string{}'

list_of_maps_of_string_of_strings:
  elemental:
    type: '[]map[string]string'
    init: '[]map[string]string{}'

list_of_times:
  elemental:
    type: '[]time.Time'
    init: '[]time.Time{}'

map_of_string_of_booleans:
  elemental:
    type: map[string]bool
    init: map[string]bool{}

map_of_string_of_integers:
  elemental:
    type: map[string]int
    init: map[string]int{}

map_of_string_of_list_of_strings:
  elemental:
    type: map[string][]string
    init: map[string][]string{}

map_of_string_of_lists_of_maps_of_string_of_objects:
  elemental:
    type: map[string][]map[string]interface{}
    init: map[string][]map[string]interface{}{}

map_of_string_of_maps_of_string_of_objects:
  elemental:
    type: map[string]map[string]interface{}

map_of_string_of_objects:
  elemental:
    type: map[string]interface{}
    init: map[string]interface{}{}

map_of_string_of_strings:
  elemental:
    type: map[string]string
    init: map[string]string{}

raw_json:
  elemental:
    type: json.RawMessage
    import: encoding/json

rendered_policy:
  elemental:
    type: map[string]PolicyRulesList
    init: |-
      map[string]PolicyRulesList{
        string(constants.RenderedPolicyTypeNetwork): PolicyRulesList{},
        string(constants.RenderedPolicyTypeFile): PolicyRulesList{},
        string(constants.RenderedPolicyTypeIsolation): PolicyRulesList{},
      }
    import: go.aporeto.io/gaia/constants
