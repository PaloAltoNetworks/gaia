actions_list:
  elemental:
    type: map[string]map[string]interface{}

api_services_entities:
  elemental:
    type: ServicesList
    init: ServicesList{}

app_parameters:
  elemental:
    type: '[]*types.AppParameter'
    init: '[]*types.AppParameter{}'
    import: go.aporeto.io/gaia/types

app_versionparameters:
  elemental:
    type: map[string][]*types.AppParameter
    init: map[string][]*types.AppParameter{}
    import: go.aporeto.io/gaia/types

arch_list:
  elemental:
    type: types.ArchitecturesTypeList
    init: types.ArchitecturesTypeList{}
    import: go.aporeto.io/gaia/types

audit_profile_rule_list:
  elemental:
    type: types.AuditProfileRuleList
    init: types.AuditProfileRuleList{}
    import: go.aporeto.io/gaia/types

audit_profiles:
  elemental:
    type: AuditProfilesList
    init: AuditProfilesList{}

automation_entitlements:
  elemental:
    type: map[string][]elemental.Operation
    init: map[string][]elemental.Operation{}

automation_events:
  elemental:
    type: map[string][]elemental.EventType
    init: map[string][]elemental.EventType{}

automation_template_parameters:
  elemental:
    type: map[string]types.AutomationTemplateParameter
    init: map[string]types.AutomationTemplateParameter{}
    import: go.aporeto.io/gaia/types

cap_map:
  elemental:
    type: types.CapabilitiesTypeMap
    init: types.CapabilitiesTypeMap{}
    import: go.aporeto.io/gaia/types

claims:
  elemental:
    type: '*claims.MidgardClaims'
    init: claims.NewMidgardClaims()
    import: go.aporeto.io/midgard-lib/claims

cron_expression:
  elemental:
    type: string

deprecated_network_entities:
  elemental:
    type: ExternalServicesList
    init: ExternalServicesList{}

elemental_identitifable:
  elemental:
    type: elemental.Identifiable

elemental_operation:
  elemental:
    type: elemental.Operation

enforcerprofiles_list:
  elemental:
    type: EnforcerProfilesList
    init: EnforcerProfilesList{}

exported_data:
  elemental:
    type: '*Export'
    init: NewExport()

exposed_api_list:
  elemental:
    type: types.ExposedAPIList
    init: types.ExposedAPIList{}
    import: go.aporeto.io/gaia/types

file_entities:
  elemental:
    type: FilePathsList
    init: FilePathsList{}

int64:
  elemental:
    type: int64

ip_list:
  elemental:
    type: types.IPList
    init: types.IPList{}
    import: go.aporeto.io/gaia/types

isolation_profile_entities:
  elemental:
    type: IsolationProfilesList
    init: IsolationProfilesList{}

list_of_list_of_objects:
  elemental:
    type: '[][]interface{}'
    init: '[][]interface{}{}'

list_of_list_of_strings:
  elemental:
    type: '[][]string'
    init: '[][]string{}'

list_of_maps_of_string_of_strings:
  elemental:
    type: '[]map[string]string'
    init: '[]map[string]string{}'

list_of_times:
  elemental:
    type: '[]time.Time'
    init: '[]time.Time{}'

map_of_string_of_booleans:
  elemental:
    type: map[string]bool
    init: map[string]bool{}

map_of_string_of_integers:
  elemental:
    type: map[string]int
    init: map[string]int{}

map_of_string_of_list_of_string:
  elemental:
    type: map[string][]string
    init: map[string][]string{}

map_of_string_of_lists_of_maps_of_string_of_objects:
  elemental:
    type: map[string][]map[string]interface{}
    init: map[string][]map[string]interface{}{}

map_of_string_of_objects:
  elemental:
    type: map[string]interface{}
    init: map[string]interface{}{}

map_of_string_of_strings:
  elemental:
    type: map[string]string
    init: map[string]string{}

namespace_entities:
  elemental:
    type: NamespacesList
    init: NamespacesList{}

network_access_policies_list:
  elemental:
    type: '[]*NetworkAccessPolicy'

network_entities:
  elemental:
    type: ExternalNetworksList
    init: ExternalNetworksList{}

policy_rules_list:
  elemental:
    type: PolicyRulesList
    init: PolicyRulesList{}

processingunit:
  elemental:
    type: '*ProcessingUnit'

processingunit_transient_tags_map:
  elemental:
    type: map[string][]string

raw_json:
  elemental:
    type: json.RawMessage
    import: encoding/json

rendered_policy:
  elemental:
    type: map[string]PolicyRulesList
    init: |-
      map[string]PolicyRulesList{
        string(constants.RenderedPolicyTypeNetwork): PolicyRulesList{},
        string(constants.RenderedPolicyTypeFile): PolicyRulesList{},
        string(constants.RenderedPolicyTypeIsolation): PolicyRulesList{},
      }
    import: go.aporeto.io/gaia/constants

syscall_action:
  elemental:
    type: types.SyscallEnforcementAction
    import: go.aporeto.io/gaia/types

syscall_rules:
  elemental:
    type: types.SyscallEnforcementRulesMap
    init: types.SyscallEnforcementRulesMap{}
    import: go.aporeto.io/gaia/types

system_call_list:
  elemental:
    type: '[]types.AuditSystemCallType'
    init: '[]types.AuditSystemCallType{}'
    import: go.aporeto.io/gaia/types

time_series_results:
  elemental:
    type: '[]*types.TimeSeriesQueryResults'
    init: '[]*types.TimeSeriesQueryResults{}'
    import: go.aporeto.io/gaia/types

vulnerabilities:
  elemental:
    type: '[]*Vulnerability'

vulnerability_level:
  elemental:
    type: constants.Vulnerability
    init: constants.VulnerabilityUnknown
    import: go.aporeto.io/gaia/constants
