package vincemodels

import (
	"fmt"
	"sync"

	"github.com/aporeto-inc/elemental"
	"time"
)

// InvoiceIdentity represents the Identity of the object.
var InvoiceIdentity = elemental.Identity{
	Name:     "invoice",
	Category: "invoices",
}

// InvoicesList represents a list of Invoices
type InvoicesList []*Invoice

// ContentIdentity returns the identity of the objects in the list.
func (o InvoicesList) ContentIdentity() elemental.Identity {

	return InvoiceIdentity
}

// Copy returns a pointer to a copy the InvoicesList.
func (o InvoicesList) Copy() elemental.ContentIdentifiable {

	copy := append(InvoicesList{}, o...)
	return &copy
}

// Append appends the objects to the a new copy of the InvoicesList.
func (o InvoicesList) Append(objects ...elemental.Identifiable) elemental.ContentIdentifiable {

	out := append(InvoicesList{}, o...)
	for _, obj := range objects {
		out = append(out, obj.(*Invoice))
	}

	return out
}

// List converts the object to an elemental.IdentifiablesList.
func (o InvoicesList) List() elemental.IdentifiablesList {

	out := elemental.IdentifiablesList{}
	for _, item := range o {
		out = append(out, item)
	}

	return out
}

// DefaultOrder returns the default ordering fields of the content.
func (o InvoicesList) DefaultOrder() []string {

	return []string{}
}

// Version returns the version of the content.
func (o InvoicesList) Version() int {

	return 1
}

// Invoice represents the model of a invoice
type Invoice struct {
	// ID of the invoice.
	ID string `json:"ID" bson:"_id" mapstructure:"ID,omitempty"`

	// Account associated to the invoice.
	Account string `json:"account" bson:"account" mapstructure:"account,omitempty"`

	// End date of the invoice period.
	EndDate time.Time `json:"endDate" bson:"enddate" mapstructure:"endDate,omitempty"`

	// Price of one enforcer credit.
	EnforcerCreditPrice int `json:"enforcerCreditPrice" bson:"enforcercreditprice" mapstructure:"enforcerCreditPrice,omitempty"`

	// Number of enforcer credits used during the period.
	EnforcerCredits int `json:"enforcerCredits" bson:"enforcercredits" mapstructure:"enforcerCredits,omitempty"`

	// Usage of enforcers
	EnforcerUsage time.Duration `json:"enforcerUsage" bson:"enforcerusage" mapstructure:"enforcerUsage,omitempty"`

	// Start date of the invoice period.
	StartDate time.Time `json:"startDate" bson:"startdate" mapstructure:"startDate,omitempty"`

	ModelVersion int `json:"-" bson:"_modelversion"`

	sync.Mutex
}

// NewInvoice returns a new *Invoice
func NewInvoice() *Invoice {

	return &Invoice{
		ModelVersion: 1,
	}
}

// Identity returns the Identity of the object.
func (o *Invoice) Identity() elemental.Identity {

	return InvoiceIdentity
}

// Identifier returns the value of the object's unique identifier.
func (o *Invoice) Identifier() string {

	return o.ID
}

// SetIdentifier sets the value of the object's unique identifier.
func (o *Invoice) SetIdentifier(id string) {

	o.ID = id
}

// Version returns the hardcoded version of the model.
func (o *Invoice) Version() int {

	return 1
}

// DefaultOrder returns the list of default ordering fields.
func (o *Invoice) DefaultOrder() []string {

	return []string{}
}

func (o *Invoice) String() string {

	return fmt.Sprintf("<%s:%s>", o.Identity().Name, o.Identifier())
}

// Validate valides the current information stored into the structure.
func (o *Invoice) Validate() error {

	errors := elemental.Errors{}
	requiredErrors := elemental.Errors{}

	if len(requiredErrors) > 0 {
		return requiredErrors
	}

	if len(errors) > 0 {
		return errors
	}

	return nil
}

// SpecificationForAttribute returns the AttributeSpecification for the given attribute name key.
func (*Invoice) SpecificationForAttribute(name string) elemental.AttributeSpecification {

	if v, ok := InvoiceAttributesMap[name]; ok {
		return v
	}

	// We could not find it, so let's check on the lower case indexed spec map
	return InvoiceLowerCaseAttributesMap[name]
}

// AttributeSpecifications returns the full attribute specifications map.
func (*Invoice) AttributeSpecifications() map[string]elemental.AttributeSpecification {

	return InvoiceAttributesMap
}

// InvoiceAttributesMap represents the map of attribute for Invoice.
var InvoiceAttributesMap = map[string]elemental.AttributeSpecification{
	"ID": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		ConvertedName:  "ID",
		Description:    `ID of the invoice.`,
		Exposed:        true,
		Format:         "free",
		Identifier:     true,
		Name:           "ID",
		ReadOnly:       true,
		Stored:         true,
		Type:           "string",
	},
	"Account": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		ConvertedName:  "Account",
		Description:    `Account associated to the invoice.`,
		Exposed:        true,
		Format:         "free",
		Name:           "account",
		ReadOnly:       true,
		Stored:         true,
		Type:           "string",
	},
	"EndDate": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		ConvertedName:  "EndDate",
		Description:    `End date of the invoice period.`,
		Exposed:        true,
		Name:           "endDate",
		ReadOnly:       true,
		Stored:         true,
		Type:           "time",
	},
	"EnforcerCreditPrice": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		ConvertedName:  "EnforcerCreditPrice",
		Description:    `Price of one enforcer credit.`,
		Exposed:        true,
		Name:           "enforcerCreditPrice",
		ReadOnly:       true,
		Stored:         true,
		Type:           "integer",
	},
	"EnforcerCredits": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		ConvertedName:  "EnforcerCredits",
		Description:    `Number of enforcer credits used during the period.`,
		Exposed:        true,
		Name:           "enforcerCredits",
		ReadOnly:       true,
		Stored:         true,
		Type:           "integer",
	},
	"EnforcerUsage": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		ConvertedName:  "EnforcerUsage",
		Description:    `Usage of enforcers`,
		Exposed:        true,
		Name:           "enforcerUsage",
		ReadOnly:       true,
		Stored:         true,
		SubType:        "duration",
		Type:           "external",
	},
	"StartDate": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		ConvertedName:  "StartDate",
		Description:    `Start date of the invoice period.`,
		Exposed:        true,
		Name:           "startDate",
		ReadOnly:       true,
		Stored:         true,
		Type:           "time",
	},
}

// InvoiceLowerCaseAttributesMap represents the map of attribute for Invoice.
var InvoiceLowerCaseAttributesMap = map[string]elemental.AttributeSpecification{
	"id": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		ConvertedName:  "ID",
		Description:    `ID of the invoice.`,
		Exposed:        true,
		Format:         "free",
		Identifier:     true,
		Name:           "ID",
		ReadOnly:       true,
		Stored:         true,
		Type:           "string",
	},
	"account": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		ConvertedName:  "Account",
		Description:    `Account associated to the invoice.`,
		Exposed:        true,
		Format:         "free",
		Name:           "account",
		ReadOnly:       true,
		Stored:         true,
		Type:           "string",
	},
	"enddate": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		ConvertedName:  "EndDate",
		Description:    `End date of the invoice period.`,
		Exposed:        true,
		Name:           "endDate",
		ReadOnly:       true,
		Stored:         true,
		Type:           "time",
	},
	"enforcercreditprice": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		ConvertedName:  "EnforcerCreditPrice",
		Description:    `Price of one enforcer credit.`,
		Exposed:        true,
		Name:           "enforcerCreditPrice",
		ReadOnly:       true,
		Stored:         true,
		Type:           "integer",
	},
	"enforcercredits": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		ConvertedName:  "EnforcerCredits",
		Description:    `Number of enforcer credits used during the period.`,
		Exposed:        true,
		Name:           "enforcerCredits",
		ReadOnly:       true,
		Stored:         true,
		Type:           "integer",
	},
	"enforcerusage": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		ConvertedName:  "EnforcerUsage",
		Description:    `Usage of enforcers`,
		Exposed:        true,
		Name:           "enforcerUsage",
		ReadOnly:       true,
		Stored:         true,
		SubType:        "duration",
		Type:           "external",
	},
	"startdate": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		ConvertedName:  "StartDate",
		Description:    `Start date of the invoice period.`,
		Exposed:        true,
		Name:           "startDate",
		ReadOnly:       true,
		Stored:         true,
		Type:           "time",
	},
}
