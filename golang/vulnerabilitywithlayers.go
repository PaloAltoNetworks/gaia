
package gaia

import "fmt"
import "github.com/aporeto-inc/elemental"


// VulnerabilityWithlayersIdentity represents the Identity of the object
var VulnerabilityWithlayersIdentity = elemental.Identity {
    Name:     "vulnerabilitywithlayers",
    Category: "vulnerabilitywithlayers",
}

// VulnerabilityWithlayersList represents a list of VulnerabilityWithlayers
type VulnerabilityWithlayersList []*VulnerabilityWithlayers

// VulnerabilityWithlayers represents the model of a vulnerabilitywithlayers
type VulnerabilityWithlayers struct {
    // LayersIntroducingVulnerability is the list of layers that introduced vulnerability
    LayersIntroducingVulnerability []string `json:"layersIntroducingVulnerability" cql:"layersintroducingvulnerability,omitempty"`

    // Vulnerability is the vulnerability of the layer
    Vulnerability string `json:"vulnerability" cql:"vulnerability,omitempty"`

    
}

// NewVulnerabilityWithlayers returns a new *VulnerabilityWithlayers
func NewVulnerabilityWithlayers() *VulnerabilityWithlayers {

    return &VulnerabilityWithlayers{
        }
}

// Identity returns the Identity of the object.
func (o *VulnerabilityWithlayers) Identity() elemental.Identity {

    return VulnerabilityWithlayersIdentity
}

// Identifier returns the value of the object's unique identifier.
func (o *VulnerabilityWithlayers) Identifier() string {

    return o.
}

func  (o *VulnerabilityWithlayers) String() string {

  return fmt.Sprintf("<%s:%s>", o.Identity().Name, o.Identifier())
}

// SetIdentifier sets the value of the object's unique identifier.
func (o *VulnerabilityWithlayers) SetIdentifier(ID string) {

    o. = ID
}

// Validate valides the current information stored into the structure.
func (o *VulnerabilityWithlayers) Validate() elemental.Errors {

    errors := elemental.Errors{}

    if len(errors) > 0 {
        return errors
    }

    return nil
}

// SpecificationForAttribute returns the AttributeSpecification for the given attribute name key.
func (o VulnerabilityWithlayers) SpecificationForAttribute(name string) elemental.AttributeSpecification {

  return VulnerabilityWithlayersAttributesMap[name]
}

// VulnerabilityWithlayersAttributesMap represents the map of attribute for VulnerabilityWithlayers.
var VulnerabilityWithlayersAttributesMap = map[string]elemental.AttributeSpecification{
  "LayersIntroducingVulnerability": elemental.AttributeSpecification{
      AllowedChoices: []string{},
      Exposed: true,
      Filterable: true,
      Name: "layersIntroducingVulnerability",
      Orderable: true,
      Stored: true,
      SubType: "string",
      Type: "list",
      },
  "Vulnerability": elemental.AttributeSpecification{
      AllowedChoices: []string{},
      Exposed: true,
      Filterable: true,
      Format: "free",
      Name: "vulnerability",
      Orderable: true,
      Stored: true,
      Type: "string",
      },
  }