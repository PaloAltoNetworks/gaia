package gaia

import "fmt"
import "github.com/aporeto-inc/elemental"

// ClairNotificationIdentity represents the Identity of the object
var ClairNotificationIdentity = elemental.Identity{
	Name:     "clairnotification",
	Category: "clairnotifications",
}

// ClairNotificationsList represents a list of ClairNotifications
type ClairNotificationsList []*ClairNotification

// ClairNotification represents the model of a clairnotification
type ClairNotification struct {
	// ID is the identifier of the object.
	ID string `json:"ID" cql:"id,primarykey,omitempty" bson:"_id"`

	// Created is the time when then notification was created
	Created string `json:"created" cql:"created,omitempty" bson:"created"`

	// Deleted is the time when the notification was deleted
	Deleted string `json:"deleted" cql:"deleted,omitempty" bson:"deleted"`

	// LayerLimit is the number of layers returned in notification
	Layerlimit string `json:"layerlimit" cql:"layerlimit,omitempty" bson:"layerlimit"`

	// LayersIntroducingNewVulnerability defines layers that are effected by new vulnerability
	LayersIntroducingNewVulnerability []String `json:"layersIntroducingNewVulnerability" cql:"layersintroducingnewvulnerability,omitempty" bson:"layersintroducingnewvulnerability"`

	// LayersIntroducingOldVulnerability defines layers that are effected by old vulnerability
	LayersIntroducingOldVulnerability []String `json:"layersIntroducingOldVulnerability" cql:"layersintroducingoldvulnerability,omitempty" bson:"layersintroducingoldvulnerability"`

	// Name is the name of the notification
	Name string `json:"name" cql:"name,omitempty" bson:"name"`

	// NewVulnerabilityLink is the link that point to the new vulnerability
	NewVulnerabilityLink string `json:"newVulnerabilityLink" cql:"newvulnerabilitylink,omitempty" bson:"newvulnerabilitylink"`

	// NewVulnerabilityName is the name of the new vulnerability
	NewVulnerabilityName string `json:"newVulnerabilityName" cql:"newvulnerabilityname,omitempty" bson:"newvulnerabilityname"`

	// NextPage is the next page number
	NextPage string `json:"nextPage" cql:"nextpage,omitempty" bson:"nextpage"`

	// Notification is the name of the notification sent by Clair using the webhook
	Notification []*Notification `json:"notification" cql:"-" bson:"-"`

	// Notified is the time when the notification was sent
	Notified string `json:"notified" cql:"notified,omitempty" bson:"notified"`

	// oldVulnerabilityLink is the link that point to the old vulnerability
	OldVulnerabilityLink string `json:"oldVulnerabilityLink" cql:"oldvulnerabilitylink,omitempty" bson:"oldvulnerabilitylink"`

	// oldVulnerabilityName is the name of the old vulnerability
	OldVulnerabilityName string `json:"oldVulnerabilityName" cql:"oldvulnerabilityname,omitempty" bson:"oldvulnerabilityname"`

	// Page is the page number
	Page string `json:"page" cql:"page,omitempty" bson:"page"`
}

// NewClairNotification returns a new *ClairNotification
func NewClairNotification() *ClairNotification {

	return &ClairNotification{}
}

// Identity returns the Identity of the object.
func (o *ClairNotification) Identity() elemental.Identity {

	return ClairNotificationIdentity
}

// Identifier returns the value of the object's unique identifier.
func (o *ClairNotification) Identifier() string {

	return o.ID
}

func (o *ClairNotification) String() string {

	return fmt.Sprintf("<%s:%s>", o.Identity().Name, o.Identifier())
}

// SetIdentifier sets the value of the object's unique identifier.
func (o *ClairNotification) SetIdentifier(ID string) {

	o.ID = ID
}

// Validate valides the current information stored into the structure.
func (o *ClairNotification) Validate() elemental.Errors {

	errors := elemental.Errors{}

	if len(errors) > 0 {
		return errors
	}

	return nil
}

// SpecificationForAttribute returns the AttributeSpecification for the given attribute name key.
func (o ClairNotification) SpecificationForAttribute(name string) elemental.AttributeSpecification {

	return ClairNotificationAttributesMap[name]
}

// ClairNotificationAttributesMap represents the map of attribute for ClairNotification.
var ClairNotificationAttributesMap = map[string]elemental.AttributeSpecification{
	"ID": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Identifier:     true,
		Name:           "ID",
		Orderable:      true,
		PrimaryKey:     true,
		ReadOnly:       true,
		Stored:         true,
		Type:           "string",
		Unique:         true,
	},
	"Created": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "created",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"Deleted": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "deleted",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"Layerlimit": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "layerlimit",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"LayersIntroducingNewVulnerability": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Name:           "layersIntroducingNewVulnerability",
		Orderable:      true,
		Stored:         true,
		SubType:        "String",
		Type:           "list",
	},
	"LayersIntroducingOldVulnerability": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Name:           "layersIntroducingOldVulnerability",
		Orderable:      true,
		Stored:         true,
		SubType:        "String",
		Type:           "list",
	},
	"Name": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "name",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"NewVulnerabilityLink": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "newVulnerabilityLink",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"NewVulnerabilityName": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "newVulnerabilityName",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"NextPage": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "nextPage",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"Notification": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Name:           "notification",
		Orderable:      true,
		SubType:        "notification",
		Type:           "external",
	},
	"Notified": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "notified",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"OldVulnerabilityLink": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "oldVulnerabilityLink",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"OldVulnerabilityName": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "oldVulnerabilityName",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"Page": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "page",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
}
