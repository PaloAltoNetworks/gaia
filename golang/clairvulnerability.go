package gaia

import "fmt"
import "github.com/aporeto-inc/elemental"

// ClairVulnerabilityIdentity represents the Identity of the object
var ClairVulnerabilityIdentity = elemental.Identity{
	Name:     "clairvulnerability",
	Category: "clairvulnerabilities",
}

// ClairVulnerabilitiesList represents a list of ClairVulnerabilities
type ClairVulnerabilitiesList []*ClairVulnerability

// ClairVulnerability represents the model of a clairvulnerability
type ClairVulnerability struct {
	// Description of the vulnerability
	Description string `json:"description" cql:"description,omitempty" bson:"description"`

	// FixedIn decsribes all the features that has the fix
	FixedIn []*VulnerabilityFixedIn `json:"fixedIn" cql:"fixedin,omitempty" bson:"fixedin"`

	// Link point to the vulnerability link
	Link string `json:"link" cql:"link,omitempty" bson:"link"`

	// Name of th vulnerability
	Name string `json:"name" cql:"name,omitempty" bson:"name"`

	// NamespaceName is the name of the namespace
	NamespaceName string `json:"namespaceName" cql:"namespacename,omitempty" bson:"namespacename"`

	// Severity of the vulnerability
	Severity string `json:"severity" cql:"severity,omitempty" bson:"severity"`
}

// NewClairVulnerability returns a new *ClairVulnerability
func NewClairVulnerability() *ClairVulnerability {

	return &ClairVulnerability{}
}

// Identity returns the Identity of the object.
func (o *ClairVulnerability) Identity() elemental.Identity {

	return ClairVulnerabilityIdentity
}

// Identifier returns the value of the object's unique identifier.
func (o *ClairVulnerability) Identifier() string {

	return ""
}

func (o *ClairVulnerability) String() string {

	return fmt.Sprintf("<%s:%s>", o.Identity().Name, o.Identifier())
}

// SetIdentifier sets the value of the object's unique identifier.
func (o *ClairVulnerability) SetIdentifier(ID string) {

}

// Validate valides the current information stored into the structure.
func (o *ClairVulnerability) Validate() error {

	errors := elemental.Errors{}

	if len(errors) > 0 {
		return errors
	}

	return nil
}

// SpecificationForAttribute returns the AttributeSpecification for the given attribute name key.
func (o ClairVulnerability) SpecificationForAttribute(name string) elemental.AttributeSpecification {

	return ClairVulnerabilityAttributesMap[name]
}

// ClairVulnerabilityAttributesMap represents the map of attribute for ClairVulnerability.
var ClairVulnerabilityAttributesMap = map[string]elemental.AttributeSpecification{
	"Description": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "description",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"FixedIn": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Name:           "fixedIn",
		Orderable:      true,
		Stored:         true,
		SubType:        "fixedin_list",
		Type:           "external",
	},
	"Link": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Format:         "free",
		Name:           "link",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"Name": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "name",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"NamespaceName": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "namespaceName",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"Severity": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "severity",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
}
