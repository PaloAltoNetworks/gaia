package gaia

import "fmt"
import "github.com/aporeto-inc/elemental"

// NotificationIdentity represents the Identity of the object
var NotificationIdentity = elemental.Identity{
	Name:     "notification",
	Category: "notifications",
}

// NotificationsList represents a list of Notifications
type NotificationsList []*Notification

// Notification represents the model of a notification
type Notification struct {
	// ID is the identifier of the object.
	ID string `json:"ID" cql:"-" bson:"-"`

	// Created is the time when then notification was created
	Created string `json:"created" cql:"created,omitempty" bson:"created"`

	// Deleted is the time when the notification was deleted
	Deleted string `json:"deleted" cql:"deleted,omitempty" bson:"deleted"`

	// LayerLimit is the number of layers returned in notification
	LayerLimit int `json:"layerLimit" cql:"layerlimit,omitempty" bson:"layerlimit"`

	// Name is the name of the notification
	Name string `json:"name" cql:"name,omitempty" bson:"name"`

	// New is the new layers that introduced vulnerability
	New *VulnerabilityWithLayers `json:"new" cql:"new,omitempty" bson:"new"`

	// NextPage is the next page number
	NextPage string `json:"nextPage" cql:"nextpage,omitempty" bson:"nextpage"`

	// Notified is the time when the notification was sent
	Notified string `json:"notified" cql:"notified,omitempty" bson:"notified"`

	// Old is the old layers that introduced vulnerability
	Old *VulnerabilityWithLayers `json:"old" cql:"old,omitempty" bson:"old"`

	// Page is the page number
	Page string `json:"page" cql:"page,omitempty" bson:"page"`
}

// NewNotification returns a new *Notification
func NewNotification() *Notification {

	return &Notification{}
}

// Identity returns the Identity of the object.
func (o *Notification) Identity() elemental.Identity {

	return NotificationIdentity
}

// Identifier returns the value of the object's unique identifier.
func (o *Notification) Identifier() string {

	return o.ID
}

func (o *Notification) String() string {

	return fmt.Sprintf("<%s:%s>", o.Identity().Name, o.Identifier())
}

// SetIdentifier sets the value of the object's unique identifier.
func (o *Notification) SetIdentifier(ID string) {

	o.ID = ID
}

// Validate valides the current information stored into the structure.
func (o *Notification) Validate() error {

	errors := elemental.Errors{}

	if len(errors) > 0 {
		return errors
	}

	return nil
}

// SpecificationForAttribute returns the AttributeSpecification for the given attribute name key.
func (o Notification) SpecificationForAttribute(name string) elemental.AttributeSpecification {

	return NotificationAttributesMap[name]
}

// NotificationAttributesMap represents the map of attribute for Notification.
var NotificationAttributesMap = map[string]elemental.AttributeSpecification{
	"ID": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Identifier:     true,
		Name:           "ID",
		Orderable:      true,
		ReadOnly:       true,
		Type:           "string",
		Unique:         true,
	},
	"Created": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "created",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"Deleted": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Name:           "deleted",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"LayerLimit": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Name:           "layerLimit",
		Orderable:      true,
		Stored:         true,
		Type:           "integer",
	},
	"Name": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "name",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"New": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Name:           "new",
		Orderable:      true,
		Stored:         true,
		SubType:        "vulnerabilitylayers",
		Type:           "external",
	},
	"NextPage": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "nextPage",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"Notified": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Name:           "notified",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
	"Old": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Name:           "old",
		Orderable:      true,
		Stored:         true,
		SubType:        "vulnerabilitylayers",
		Type:           "external",
	},
	"Page": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Name:           "page",
		Orderable:      true,
		Stored:         true,
		Type:           "string",
	},
}
