attributes:
- creation_only: true
  description: FQDN contains the fqdn of the server where the enforcer is running.
  exposed: true
  filterable: true
  format: free
  name: FQDN
  orderable: true
  required: true
  stored: true
  type: string
- autogenerated: true
  description: 'Certificate is the certificate of the enforcer. '
  exposed: true
  format: free
  name: certificate
  orderable: true
  read_only: true
  stored: true
  type: string
- description: CertificateExpirationDate is the expiration date of the certificate.
  exposed: true
  filterable: true
  name: certificateExpirationDate
  orderable: true
  stored: true
  type: time
- autogenerated: true
  description: CertificateKey is the secret key of the enforcer. Returned only when
    a enforcer is created or the certificate is updated.
  exposed: true
  format: free
  name: certificateKey
  orderable: true
  read_only: true
  type: string
- description: CertificateRequest can be used to generate a certificate from that
    CSR instead of letting the server generate your private key for you.
  exposed: true
  format: free
  name: certificateRequest
  transient: true
  type: string
- creation_only: true
  description: If set during creation,the server will not initially generate a certificate.
    In that case you have to provide a valid CSR through certificateRequest during
    an update.
  exposed: true
  name: certificateRequestEnabled
  stored: true
  type: boolean
- allowed_choices:
  - RENEW
  - REVOKED
  - VALID
  default_value: VALID
  description: CertificateStatus indicates if the certificate is valid.
  exposed: true
  filterable: true
  name: certificateStatus
  orderable: true
  stored: true
  type: enum
- description: CollectInfo indicates to the enforcer it needs to collect information.
  exposed: true
  name: collectInfo
  stored: true
  type: boolean
- description: CollectedInfo represents the latest info collected by the enforcer.
  exposed: true
  name: collectedInfo
  stored: true
  subtype: collected_info
  type: external
- description: CurrentVersion holds the enforcerd binary version that is currently
    associated to this object.
  exposed: true
  filterable: true
  format: free
  name: currentVersion
  orderable: true
  stored: true
  type: string
- description: Contains the ID of the profile used by the instance of enforcerd.
  exposed: true
  filterable: true
  format: free
  name: enforcerProfileID
  orderable: true
  stored: true
  type: string
- description: LastCollectionTime represents the date and time when the info have
    been collected.
  exposed: true
  name: lastCollectionTime
  stored: true
  type: time
- description: LastSyncTime holds the last heart beat time.
  exposed: true
  filterable: true
  name: lastSyncTime
  orderable: true
  stored: true
  type: time
- autogenerated: true
  description: LocalCA contains the initial chain of trust for the enforcer. This
    valud is only given when you retrieve a single enforcer.
  exposed: true
  format: free
  name: localCA
  transient: true
  type: string
- allowed_choices:
  - Connected
  - Disconnected
  - Initialized
  - Unknown
  autogenerated: true
  default_value: Initialized
  description: OperationalStatus tells the status of the enforcer.
  exposed: true
  filterable: true
  name: operationalStatus
  read_only: true
  transient: true
  type: enum
- autogenerated: true
  description: PublicToken is the public token of the server that will be included
    in the datapath and its signed by the private CA.
  exposed: true
  format: free
  name: publicToken
  read_only: true
  transient: true
  type: string
- description: Tells if the the version of enforcerd is outdated and should be updated.
  exposed: true
  filterable: true
  name: updateAvailable
  orderable: true
  stored: true
  type: boolean
children:
- rest_name: enforcerprofile
  get: true
- rest_name: poke
  get: true
model:
  delete: true
  get: true
  update: true
  description: A Enforcer Profile contains a configuration for a Enforcer. It contains
    various parameters, like what network should not policeds, what processing units
    should be ignored based on their tags and so on. It also contains more advanced
    parameters to fine tune the Agent. A Enforcer will decide what profile to apply
    using aEnforcer Profile Mapping Policy. This policy will decide according the
    Enforcer's tags what profile to use. If an Enforcer tags are matching more than
    a single policy, it will refuse to start. Some parameters will be applied directly
    to a running agent, some will need to restart it.
  entity_name: Enforcer
  extends:
  - '@base'
  - '@described'
  - '@identifiable-pk-stored'
  - '@metadatable'
  - '@named'
  package: squall
  resource_name: enforcers
  rest_name: enforcer
