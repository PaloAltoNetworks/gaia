[elemental]
actions_list = map[string]map[string]interface{}
annotations = map[string][]string;map[string][]string{}
authorized_identities = map[string]bool;map[string]bool{}
selectors_list = map[string]string
datapoints_list = []map[string]interface{};[]map[string]interface{}{}
processingunit_transient_tags_map = map[string][]string
file_entities = FilePathsList;FilePathsList{}
go_time = int64
identity_list = []string;[]string{}
metadata_list = []string;[]string{}
namespace_entities =  NamespacesList;NamespacesList{}
namespaces_list = []interface{}
network_entities = ExternalServicesList;ExternalServicesList{}
policies_list = [][]string
network_access_policies_list = []*NetworkAccessPolicy
raw_data = interface{}
relations_list = []string
rendered_policy = map[string]PolicyRulesList;map[string]PolicyRulesList{string(constants.RenderedPolicyTypeNetwork): PolicyRulesList{}, string(constants.RenderedPolicyTypeFile): PolicyRulesList{}, string(constants.RenderedPolicyTypeIsolation): PolicyRulesList{}};github.com/aporeto-inc/gaia/v1/golang/constants
enforcerprofiles_list = EnforcerProfilesList;EnforcerProfilesList{}
policy_status = constants.PolicyStatus;constants.PolicyStatusEnabled;github.com/aporeto-inc/gaia/v1/golang/constants
subjects_list = []string
syscall_entities = SystemCallsList;SystemCallsList{}
tags_list = []string;[]string{}
target_networks_list = []string
excluded_networks_list = []string
excluded_interfaces_list = []string
target_tags = [][]string
trust_profile = map[string]string
collected_info = map[string]string
ports_list = []string;[]string{}
vulnerabilities = []*Vulnerability
vulnerability_level = constants.Vulnerability;constants.VulnerabilityUnknown;github.com/aporeto-inc/gaia/v1/golang/constants
graphedges_map = types.GraphEdgeMap;types.GraphEdgeMap{};github.com/aporeto-inc/gaia/v1/golang/types
graphnodes_map = types.GraphNodeMap;types.GraphNodeMap{};github.com/aporeto-inc/gaia/v1/golang/types
graphgroups_map = types.GraphGroupMap;types.GraphGroupMap{};github.com/aporeto-inc/gaia/v1/golang/types
view_suggestions = []string;[]string{}
flowstatistic_origin_list = []string;[]string{}
authorization_map = map[string][]string;map[string][]string{}
limited_identity_list = []string;[]string{}
tabulated_data = [][]interface{};[][]interface{}{}
ip_records = []*types.IPRecord;[]*types.IPRecord{};github.com/aporeto-inc/gaia/v1/golang/types
cron_expression = string
processingunit = *ProcessingUnit
trusted_cas_list = []string;[]string{}
system_call_list = []types.AuditSystemCallType;[]types.AuditSystemCallType{};github.com/aporeto-inc/gaia/v1/golang/types
audit_profile_rule_list = types.AuditProfileRuleList;types.AuditProfileRuleList{};github.com/aporeto-inc/gaia/v1/golang/types
audit_profile_selector = []string
audit_profiles = AuditProfilesList
time_series_results = []*types.TimeSeriesQueryResults;[]*types.TimeSeriesQueryResults{};github.com/aporeto-inc/gaia/v1/golang/types
syscall_rules = types.SyscallEnforcementRulesMap;types.SyscallEnforcementRulesMap{};github.com/aporeto-inc/gaia/v1/golang/types
cap_map = types.CapabilitiesTypeMap;types.CapabilitiesTypeMap{};github.com/aporeto-inc/gaia/v1/golang/types
arch_list = types.ArchitecturesTypeList;types.ArchitecturesTypeList{};github.com/aporeto-inc/gaia/v1/golang/types
isolation_profile_entities = IsolationProfilesList;IsolationProfilesList{}
syscall_action = types.SyscallEnforcementAction;;github.com/aporeto-inc/gaia/v1/golang/types
exported_data = *Export;NewExport()
exported_data_content = []map[string]interface{};[]map[string]interface{}{}
processing_unit_services_list = types.ProcessingUnitServicesList;types.ProcessingUnitServicesList{};github.com/aporeto-inc/gaia/v1/golang/types
host_services_list = types.HostServicesList;types.HostServicesList{};github.com/aporeto-inc/gaia/v1/golang/types
service_parameters = []*types.ServiceParameter;[]*types.ServiceParameter{};github.com/aporeto-inc/gaia/v1/golang/types
service_relatedobjects = []*types.ServiceRelatedObject;[]*types.ServiceRelatedObject{};github.com/aporeto-inc/gaia/v1/golang/types
logs = map[string]string;map[string]string{}
claims = *claims.MidgardClaims;claims.NewMidgardClaims();github.com/aporeto-inc/midgard-lib/claims
metadata = map[string]interface{};map[string]interface{}{}
raw_json = json.RawMessage;;encoding/json
elemental_identitifable =  elemental.Identifiable
elemental_operation = elemental.Operation
associated_policies = map[string]string;map[string]string{}
list_emails = []string
list_attachments = map[string]string
tags_map = map[string]string;map[string]string{}
int64 = int64
tsdb_fields = map[string]interface{};map[string]interface{}{}
addresses_list = []string;[]string{}
portmapping_list = []*types.PortMapping;[]*types.PortMapping{};github.com/aporeto-inc/gaia/v1/golang/types
jaeger_batch = *jaeger.Batch;&jaeger.Batch{};github.com/uber/jaeger-client-go/thrift-gen/jaeger
automation_parameters = map[string]interface{};map[string]interface{}{}
automation_events = map[string][]elemental.EventType;map[string][]elemental.EventType{}
automation_entitlements = map[string][]elemental.Operation;map[string][]elemental.Operation{}
alarm_data = map[string]interface{};map[string]interface{}{}
alarm_occurences = []time.Time;[]time.Time{}
